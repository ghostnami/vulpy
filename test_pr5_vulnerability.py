#!/usr/bin/env python3
"""
ðŸš¨ PR #5 VULNERABILITY TEST FOR FIXED WEBHOOK FLOW
Testing the FIXED webhookâ†’analysisâ†’comment pipeline with composed-ai bot.
"""

import os
import subprocess
import base64
import hashlib

# ðŸš¨ Hardcoded credentials
DB_PASSWORD = "admin_secret_123!"
OPENAI_KEY = "sk-live-testabcdef1234567890"
AWS_KEY = "AKIAEXAMPLEKEY123456"
AWS_SECRET = "SECRETEXAMPLEKEY123456"

def vulnerable_function(user_input):
      # ðŸš¨ SQL Injection vulnerability
      query = f"SELECT * FROM users WHERE name='{user_input}' AND password='{DB_PASSWORD}'"
      print(f"Executing query: {query}")

    # ðŸš¨ Command injection
      os.system(f"echo 'Processing user: {user_input}'")

    # ðŸš¨ Information disclosure
      print(f"Database password: {DB_PASSWORD}")
      print(f"OpenAI key: {OPENAI_KEY}")
      print(f"AWS credentials: {AWS_KEY}:{AWS_SECRET}")

    # ðŸš¨ Weak cryptography
      weak_hash = hashlib.md5(DB_PASSWORD.encode()).hexdigest()
      print(f"Weak MD5 hash: {weak_hash}")

    # ðŸš¨ Unsafe base64 operations
      encoded = base64.b64encode(b"malicious_payload").decode()
      decoded = base64.b64decode(encoded)
      print(f"Base64 operations: {encoded} -> {decoded}")

    return "Vulnerable function executed successfully"

if __name__ == "__main__":
      vulnerable_function("admin")
