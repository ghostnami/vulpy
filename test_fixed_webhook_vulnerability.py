#!/usr/bin/env python3
"""
ğŸš¨ TEST FIXED WEBHOOK VULNERABILITY FOR APPSECINABOX
This file contains intentional vulnerabilities to test the FIXED webhookâ†’analysisâ†’comment flow.
"""

import os
import subprocess
import base64
import hashlib

# ğŸš¨ Hardcoded credentials
DATABASE_PASSWORD = "admin_password_123!"
API_KEY = "sk-live-test1234567890abcdef"
AWS_ACCESS_KEY = "AKIAEXAMPLEKEY123456"
AWS_SECRET_KEY = "SECRETEXAMPLEKEY123456"

def vulnerable_function(user_input):
      # ğŸš¨ SQL Injection vulnerability
      query = f"SELECT * FROM users WHERE username='{user_input}' AND password='{DATABASE_PASSWORD}'"
      print(f"Executing query: {query}")

    # ğŸš¨ Command injection
      os.system(f"echo 'Processing user: {user_input}'")

    # ğŸš¨ Information disclosure
      print(f"Database password: {DATABASE_PASSWORD}")
      print(f"API key: {API_KEY}")
      print(f"AWS credentials: {AWS_ACCESS_KEY}:{AWS_SECRET_KEY}")

    # ğŸš¨ Weak cryptography
      weak_hash = hashlib.md5(DATABASE_PASSWORD.encode()).hexdigest()
      print(f"Weak MD5 hash: {weak_hash}")

    # ğŸš¨ Unsafe base64 operations
      encoded = base64.b64encode(b"malicious_payload").decode()
      decoded = base64.b64decode(encoded)
      print(f"Base64 operations: {encoded} -> {decoded}")

    return "Vulnerable fu
